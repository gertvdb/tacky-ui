{"version":3,"sources":["../src/types/css-gap.ts","../src/layouts/grid/grid.types.ts","../src/layouts/grid/context.grid.tsx","../src/layouts/grid/hooks/use-grid.tsx","../src/layouts/grid/context.grid.item.tsx","../src/layouts/grid/grid.style.tsx","../src/layouts/grid/hooks/use-grid-item.tsx","../src/layouts/grid/components/grid.item.content.tsx","../src/layouts/grid/components/grid.item.tsx","../src/layouts/grid/index.tsx"],"names":["createContext","jsx","useContext"],"mappings":"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","file":"index.js","sourcesContent":["import { CSSLength } from \"@/types/css-length\";\n\ntype CSSGapKeyword = \"normal\" | \"inherit\" | \"initial\" | \"unset\";\n\nexport type CSSGap = CSSLength | CSSGapKeyword;\n\nexport function isCSSGap(value: any): value is CSSGap {\n  if (typeof value !== \"string\") return false;\n\n  // Check if it's a CSSGapKeyword\n  if (\n    value === \"normal\" ||\n    value === \"inherit\" ||\n    value === \"initial\" ||\n    value === \"unset\"\n  ) {\n    return true;\n  }\n\n  // Check if it's a CSSLength\n  if (value === \"0\") return true;\n\n  // Check if it matches the pattern ${number}${CSSUnit}\n  const cssUnitRegex =\n    /^[0-9]+(\\.[0-9]+)?(px|em|rem|%|vh|vw|vmin|vmax|ch|ex|cm|mm|in|pt|pc)$/;\n  return cssUnitRegex.test(value);\n}\n","import React, { PropsWithChildren } from \"react\";\nimport { CSSGap, isCSSGap } from \"@/types/css-gap\";\nimport { CSSBreakpoint } from \"@/types/css-breakpoint-unit\";\n\nexport type IGridGapItemKey = \"row\" | \"column\";\n\nexport interface IGridGapItem {\n  row: CSSGap;\n  column: CSSGap;\n}\n\nexport interface IPartialGridGapItem {\n  row?: CSSGap;\n  column?: CSSGap;\n}\n\nexport function isGridGapItem(value: any): value is IGridGapItem {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    \"row\" in value &&\n    \"column\" in value &&\n    isCSSGap(value.row) &&\n    isCSSGap(value.column)\n  );\n}\n\nexport function isPartialGridGapItem(value: any): value is IPartialGridGapItem {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    ((\"row\" in value && isCSSGap(value.row)) ||\n      (\"column\" in value && isCSSGap(value.column)))\n  );\n}\n\nexport interface IGridGap {\n  initial: IGridGapItem | CSSGap;\n  xs?: IGridGapItem | CSSGap;\n  sm?: IGridGapItem | CSSGap;\n  md?: IGridGapItem | CSSGap;\n  lg?: IGridGapItem | CSSGap;\n  xl?: IGridGapItem | CSSGap;\n  xxl?: IGridGapItem | CSSGap;\n  \"3xl\"?: IGridGapItem | CSSGap;\n  \"4xl\"?: IGridGapItem | CSSGap;\n}\n\nexport interface IGridBreakpoints {\n  xs: CSSBreakpoint;\n  sm: CSSBreakpoint;\n  md: CSSBreakpoint;\n  lg: CSSBreakpoint;\n  xl: CSSBreakpoint;\n  xxl: CSSBreakpoint;\n  \"3xl\": CSSBreakpoint;\n  \"4xl\": CSSBreakpoint;\n}\nexport type IGridBreakpointsPartial = Partial<IGridBreakpoints>;\n\nexport interface IGridConfig extends PropsWithChildren {\n  gap: IGridGap | CSSGap;\n  breakpoints: Partial<IGridBreakpoints>;\n  columns: number;\n}\n\nexport type IGridConfigPartial = Partial<IGridConfig>;\n\nexport interface IGrid extends PropsWithChildren {\n  config: IGridConfigPartial;\n}\n\nexport interface IGridItemSpan {\n  initial: number;\n  xs?: number;\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n  xxl?: number;\n  \"3xl\"?: number;\n  \"4xl\"?: number;\n}\n\nexport const isNumber = (value: unknown): value is number =>\n  typeof value === \"number\" && !isNaN(value) && isFinite(value); // Exclude NaN\n\nexport interface IGridItemConfig extends PropsWithChildren {\n  span: IGridItemSpan | number;\n}\n\nexport type IGridItemConfigPartial = Partial<IGridItemConfig>;\n\nexport interface IGridItem extends PropsWithChildren {\n  config: IGridItemConfigPartial;\n}\n\nexport interface GridItemProps {\n  children: React.ReactNode;\n  initial?: number;\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n  xxl?: number;\n}\n\nexport interface StyledGridProps {\n  gapRow: string;\n  gapColumn: string;\n  smGapRow: string;\n  smGapColumn: string;\n  mdGapRow: string;\n  mdGapColumn: string;\n  lgGapRow: string;\n  lgGapColumn: string;\n  xlGapRow: string;\n  xlGapColumn: string;\n  xxlGapRow: string;\n  xxlGapColumn: string;\n  smBreakpoint: string;\n  mdBreakpoint: string;\n  lgBreakpoint: string;\n  xlBreakpoint: string;\n  xxlBreakpoint: string;\n  alignItems: \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\";\n}\n\nexport interface StyledGridItemProps {\n  initial: number;\n  sm: number;\n  md: number;\n  lg: number;\n  xl: number;\n  xxl: number;\n  smBreakpoint: string;\n  mdBreakpoint: string;\n  lgBreakpoint: string;\n  xlBreakpoint: string;\n  xxlBreakpoint: string;\n}\n","import React, { createContext } from \"react\";\nimport { IGridConfigPartial, IGridGap } from \"@/layouts/grid/grid.types\";\nimport { CSSGap, isCSSGap } from \"@/types/css-gap\";\n\nexport interface IContextGridBreakPoints {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  xxl: string;\n  \"3xl\": string;\n  \"4xl\": string;\n}\n\nexport interface IContextGridGaps {\n  initial: { row: string; column: string };\n  xs: { row: string; column: string };\n  sm: { row: string; column: string };\n  md: { row: string; column: string };\n  lg: { row: string; column: string };\n  xl: { row: string; column: string };\n  xxl: { row: string; column: string };\n  \"3xl\": { row: string; column: string };\n  \"4xl\": { row: string; column: string };\n}\n\nexport interface IContextGridType {\n  gap: IContextGridGaps;\n  breakpoints: IContextGridBreakPoints;\n  columns: number;\n}\n\nexport const ContextGridColumnsDefaults = 12;\n\nconst ContextGridBreakpointsDefaults = {\n  xs: \"480px\", // For very small screens like older phones (e.g., iPhone SE or similar):\n  sm: \"640px\", // Mobile (small)\n  md: \"768px\", // Tablets (medium)\n  lg: \"1024px\", // Small laptops\n  xl: \"1280px\", // Desktops\n  xxl: \"1536px\", // Large desktops / 2K+\n  \"3xl\": \"1920px\", // For ultra-wide monitors (e.g., 4K+ displays or dashboards):\n  \"4xl\": \"2560px\", // For ultra-wide monitors (e.g., 4K+ displays or dashboards):\n};\n\nconst ContextGridGapsDefaults = {\n  initial: { row: \"0\", column: \"0\" },\n  xs: { row: \"0\", column: \"0\" },\n  sm: { row: \"0\", column: \"0\" },\n  md: { row: \"0\", column: \"0\" },\n  lg: { row: \"0\", column: \"0\" },\n  xl: { row: \"0\", column: \"0\" },\n  xxl: { row: \"0\", column: \"0\" },\n  \"3xl\": { row: \"0\", column: \"0\" },\n  \"4xl\": { row: \"0\", column: \"0\" },\n};\n\nexport const ContextGrid = createContext<IContextGridType>({\n  breakpoints: ContextGridBreakpointsDefaults,\n  gap: ContextGridGapsDefaults,\n  columns: ContextGridColumnsDefaults,\n});\n\nexport const ContextProviderGrid = (props: IGridConfigPartial) => {\n  const { gap, breakpoints, children } = props;\n\n  const CssGap = gap ?? {\n    initial: \"0\",\n    xs: \"0\",\n    sm: \"0\",\n    md: \"0\",\n    lg: \"0\",\n    xl: \"0\",\n    xxl: \"0\",\n    \"3xl\": \"0\",\n    \"4xl\": \"0\",\n  };\n\n  const SafeGapRowInitial = isCSSGap(CssGap)\n    ? CssGap\n    : isCSSGap(CssGap.initial)\n      ? CssGap.initial\n      : (CssGap.initial.row ?? \"0\");\n  const SafeGapColInitial = isCSSGap(CssGap)\n    ? CssGap\n    : isCSSGap(CssGap.initial)\n      ? CssGap.initial\n      : (CssGap.initial.column ?? \"0\");\n\n  const SafeGapRowXs = getCssGap(CssGap, SafeGapRowInitial, \"xs\", \"row\");\n  const SafeGapColXs = getCssGap(CssGap, SafeGapColInitial, \"xs\", \"column\");\n\n  const SafeGapRowSm = getCssGap(CssGap, SafeGapRowXs, \"sm\", \"row\");\n  const SafeGapColSm = getCssGap(CssGap, SafeGapColXs, \"sm\", \"column\");\n\n  const SafeGapRowMd = getCssGap(CssGap, SafeGapRowSm, \"md\", \"row\");\n  const SafeGapColMd = getCssGap(CssGap, SafeGapColSm, \"md\", \"column\");\n\n  const SafeGapRowLg = getCssGap(CssGap, SafeGapRowMd, \"lg\", \"row\");\n  const SafeGapColLg = getCssGap(CssGap, SafeGapColMd, \"lg\", \"column\");\n\n  const SafeGapRowXl = getCssGap(CssGap, SafeGapRowLg, \"xl\", \"row\");\n  const SafeGapColXl = getCssGap(CssGap, SafeGapColLg, \"xl\", \"column\");\n\n  const SafeGapRowXxl = getCssGap(CssGap, SafeGapRowXl, \"xxl\", \"row\");\n  const SafeGapColXxl = getCssGap(CssGap, SafeGapColXl, \"xxl\", \"column\");\n\n  const SafeGapRow3xl = getCssGap(CssGap, SafeGapRowXxl, \"3xl\", \"row\");\n  const SafeGapCol3xl = getCssGap(CssGap, SafeGapColXxl, \"3xl\", \"column\");\n\n  const SafeGapRow4xl = getCssGap(CssGap, SafeGapRow3xl, \"4xl\", \"row\");\n  const SafeGapCol4xl = getCssGap(CssGap, SafeGapCol3xl, \"4xl\", \"column\");\n\n  const gapConfig = {\n    initial: {\n      row: SafeGapRowInitial,\n      column: SafeGapColInitial,\n    },\n    xs: {\n      row: SafeGapRowXs,\n      column: SafeGapColXs,\n    },\n    sm: {\n      row: SafeGapRowSm,\n      column: SafeGapColSm,\n    },\n    md: {\n      row: SafeGapRowMd,\n      column: SafeGapColMd,\n    },\n    lg: {\n      row: SafeGapRowLg,\n      column: SafeGapColLg,\n    },\n    xl: {\n      row: SafeGapRowXl,\n      column: SafeGapColXl,\n    },\n    xxl: {\n      row: SafeGapRowXxl,\n      column: SafeGapColXxl,\n    },\n    \"3xl\": {\n      row: SafeGapRow3xl,\n      column: SafeGapCol3xl,\n    },\n    \"4xl\": {\n      row: SafeGapRow4xl,\n      column: SafeGapCol4xl,\n    },\n  };\n\n  return (\n    <ContextGrid.Provider\n      value={{\n        gap: gapConfig,\n        breakpoints: ContextGridBreakpointsDefaults,\n        columns: 12,\n      }}\n    >\n      {children}\n    </ContextGrid.Provider>\n  );\n};\n\nfunction getCssGap(\n  gap: IGridGap | CSSGap,\n  initial: CSSGap,\n  size: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | \"3xl\" | \"4xl\",\n  key: \"row\" | \"column\",\n): CSSGap {\n  // If gap is a CSSGap, return it\n  if (isCSSGap(gap)) {\n    return gap;\n  }\n\n  // If gap[size] doesn't exist, return the initial value\n  if (!gap[size]) {\n    return initial;\n  }\n\n  // If gap[size] is a CSSGap, return it\n  if (isCSSGap(gap[size])) {\n    return gap[size] as CSSGap;\n  }\n\n  // If gap[size] is an object with the key property, return that property\n  if (typeof gap[size] === \"object\" && gap[size] !== null && key in gap[size]) {\n    const value = gap[size][key];\n    if (value !== undefined && value !== null) {\n      return value;\n    }\n  }\n\n  // If we couldn't find a valid value, return the initial value\n  return initial;\n}\n","import { useContext } from \"react\";\nimport { ContextGrid, IContextGridType } from \"@/layouts/grid/context.grid\";\n\nexport const useGrid = (): IContextGridType => {\n  const context = useContext(ContextGrid);\n  if (context === undefined) {\n    throw new Error(\"useGrid must be used within a ContextGrid item\");\n  }\n\n  return context;\n};\n","import React, { createContext } from \"react\";\nimport { IGridItemConfigPartial, isNumber } from \"@/layouts/grid/grid.types\";\nimport { useGrid } from \"@/layouts/grid/hooks/use-grid\";\nimport { ContextGridColumnsDefaults } from \"@/layouts/grid/context.grid\";\n\nexport interface IContextGridItemSpan {\n  initial: string;\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n  xxl: string;\n  \"3xl\": string;\n  \"4xl\": string;\n}\n\nexport interface IContextGridItemType {\n  span: IContextGridItemSpan;\n}\n\nexport const ContextGridItem = createContext<IContextGridItemType>({\n  span: {\n    initial: String(ContextGridColumnsDefaults),\n    xs: String(ContextGridColumnsDefaults),\n    sm: String(ContextGridColumnsDefaults),\n    md: String(ContextGridColumnsDefaults),\n    lg: String(ContextGridColumnsDefaults),\n    xl: String(ContextGridColumnsDefaults),\n    xxl: String(ContextGridColumnsDefaults),\n    \"3xl\": String(ContextGridColumnsDefaults),\n    \"4xl\": String(ContextGridColumnsDefaults),\n  },\n});\n\nexport const ContextProviderGridItem = (props: IGridItemConfigPartial) => {\n  const { children, span } = props;\n  const GridContext = useGrid();\n\n  const CssSpan = span ?? {\n    initial: GridContext.columns,\n    xs: GridContext.columns,\n    sm: GridContext.columns,\n    md: GridContext.columns,\n    lg: GridContext.columns,\n    xl: GridContext.columns,\n    xxl: GridContext.columns,\n    \"3xl\": GridContext.columns,\n    \"4xl\": GridContext.columns,\n  };\n\n  const SafeSpanInitial = isNumber(CssSpan) ? CssSpan : CssSpan.initial;\n  const SafeSpanXs = isNumber(CssSpan)\n    ? CssSpan\n    : (CssSpan.xs ?? SafeSpanInitial);\n  const SafeSpanSm = isNumber(CssSpan) ? CssSpan : (CssSpan.sm ?? SafeSpanXs);\n  const SafeSpanMd = isNumber(CssSpan) ? CssSpan : (CssSpan.md ?? SafeSpanSm);\n  const SafeSpanLg = isNumber(CssSpan) ? CssSpan : (CssSpan.lg ?? SafeSpanMd);\n  const SafeSpanXl = isNumber(CssSpan) ? CssSpan : (CssSpan.xl ?? SafeSpanLg);\n  const SafeSpanXxl = isNumber(CssSpan) ? CssSpan : (CssSpan.xxl ?? SafeSpanXl);\n  const SafeSpan3xl = isNumber(CssSpan)\n    ? CssSpan\n    : (CssSpan[\"3xl\"] ?? SafeSpanXxl);\n  const SafeSpan4xl = isNumber(CssSpan)\n    ? CssSpan\n    : (CssSpan[\"4xl\"] ?? SafeSpan3xl);\n\n  if (SafeSpanInitial > GridContext.columns) {\n    throw new Error(\n      \"span 'initial' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanXs > GridContext.columns) {\n    throw new Error(\n      \"span 'xs' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanSm > GridContext.columns) {\n    throw new Error(\n      \"span 'sm' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanMd > GridContext.columns) {\n    throw new Error(\n      \"span 'md' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanLg > GridContext.columns) {\n    throw new Error(\n      \"span 'lg' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanXl > GridContext.columns) {\n    throw new Error(\n      \"span 'xl' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpanXxl > GridContext.columns) {\n    throw new Error(\n      \"span 'xxl' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpan3xl > GridContext.columns) {\n    throw new Error(\n      \"span '3xl' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  if (SafeSpan4xl > GridContext.columns) {\n    throw new Error(\n      \"span '4xl' for Grid.Item can not be langer than defined columns\",\n    );\n  }\n\n  return (\n    <ContextGridItem.Provider\n      value={{\n        span: {\n          initial: String(SafeSpanInitial),\n          xs: String(SafeSpanXs),\n          sm: String(SafeSpanSm),\n          md: String(SafeSpanMd),\n          lg: String(SafeSpanLg),\n          xl: String(SafeSpanXl),\n          xxl: String(SafeSpanXxl),\n          \"3xl\": String(SafeSpan3xl),\n          \"4xl\": String(SafeSpan4xl),\n        },\n      }}\n    >\n      {children}\n    </ContextGridItem.Provider>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  IContextGridBreakPoints,\n  IContextGridGaps,\n} from \"@/layouts/grid/context.grid\";\nimport { IContextGridItemSpan } from \"@/layouts/grid/context.grid.item\";\n\nexport const StyledGridContainer = styled.div`\n  container-type: inline-size;\n  container-name: grid;\n  width: 100%;\n`;\n\nexport const StyledGrid = styled.div<{\n  $gaps: IContextGridGaps;\n  $breakpoints: IContextGridBreakPoints;\n}>`\n  display: grid;\n  grid-template-columns: repeat(24, minmax(0, 1fr));\n  align-items: flex-start;\n  row-gap: ${(props) => props.$gaps.initial.row};\n  column-gap: ${(props) => props.$gaps.initial.column};\n\n  @container grid (min-width: ${(props) => props.$breakpoints.xs}) {\n    row-gap: ${(props) => props.$gaps.xs.row};\n    column-gap: ${(props) => props.$gaps.xs.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.sm}) {\n    row-gap: ${(props) => props.$gaps.sm.row};\n    column-gap: ${(props) => props.$gaps.sm.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.md}) {\n    row-gap: ${(props) => props.$gaps.md.row};\n    column-gap: ${(props) => props.$gaps.md.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.lg}) {\n    row-gap: ${(props) => props.$gaps.lg.row};\n    column-gap: ${(props) => props.$gaps.lg.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.xl}) {\n    row-gap: ${(props) => props.$gaps.xl.row};\n    column-gap: ${(props) => props.$gaps.xl.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.xxl}) {\n    row-gap: ${(props) => props.$gaps.xxl.row};\n    column-gap: ${(props) => props.$gaps.xxl.column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints[\"3xl\"]}) {\n    row-gap: ${(props) => props.$gaps[\"3xl\"].row};\n    column-gap: ${(props) => props.$gaps[\"3xl\"].column};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints[\"4xl\"]}) {\n    row-gap: ${(props) => props.$gaps[\"4xl\"].row};\n    column-gap: ${(props) => props.$gaps[\"4xl\"].column};\n  }\n`;\n\nexport const StyledGridItem = styled.div<{\n  $spans: IContextGridItemSpan;\n  $breakpoints: IContextGridBreakPoints;\n}>`\n  display: block;\n  min-width: 0;\n  height: 100%;\n\n  grid-column: span ${(props) => props.$spans.initial} / span\n    ${(props) => props.$spans.initial};\n\n  @container grid (min-width: ${(props) => props.$breakpoints.xs}) {\n    grid-column: span ${(props) => props.$breakpoints.xs} / span\n      ${(props) => props.$spans.xs};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints.sm}) {\n    grid-column: span ${(props) => props.$spans.sm} / span\n      ${(props) => props.$spans.sm};\n  }\n  @container grid (min-width: ${(props) => props.$breakpoints.md}) {\n    grid-column: span ${(props) => props.$spans.md} / span\n      ${(props) => props.$spans.md};\n  }\n  @container grid (min-width: ${(props) => props.$breakpoints.lg}) {\n    grid-column: span ${(props) => props.$spans.lg} / span\n      ${(props) => props.$spans.lg};\n  }\n  @container grid (min-width: ${(props) => props.$breakpoints.xl}) {\n    grid-column: span ${(props) => props.$spans.xl} / span\n      ${(props) => props.$spans.xl};\n  }\n  @container grid (min-width: ${(props) => props.$breakpoints.xxl}) {\n    grid-column: span ${(props) => props.$spans.xxl} / span\n      ${(props) => props.$spans.xxl};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints[\"3xl\"]}) {\n    grid-column: span ${(props) => props.$spans[\"3xl\"]} / span\n      ${(props) => props.$spans[\"3xl\"]};\n  }\n\n  @container grid (min-width: ${(props) => props.$breakpoints[\"4xl\"]}) {\n    grid-column: span ${(props) => props.$spans[\"4xl\"]} / span\n      ${(props) => props.$spans[\"4xl\"]};\n  }\n`;\n","import { useContext } from \"react\";\nimport {\n  ContextGridItem,\n  IContextGridItemType,\n} from \"@/layouts/grid/context.grid.item\";\n\nexport const useGridItem = (): IContextGridItemType => {\n  const context = useContext(ContextGridItem);\n  if (context === undefined) {\n    throw new Error(\"useGridItem must be used within a ContextGridItem\");\n  }\n  return context;\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { StyledGridItem } from \"@/layouts/grid/grid.style\";\nimport { useGridItem } from \"@/layouts/grid/hooks/use-grid-item\";\nimport { useGrid } from \"@/layouts/grid/hooks/use-grid\";\n\nexport const GridItemContent = (props: PropsWithChildren) => {\n  const { children } = props;\n\n  const GridContext = useGrid();\n  const GridItemContext = useGridItem();\n\n  return (\n    <StyledGridItem\n      className={\"grid_item\"}\n      $spans={GridItemContext.span}\n      $breakpoints={GridContext.breakpoints}\n    >\n      {children}\n    </StyledGridItem>\n  );\n};\n","import React from \"react\";\nimport { IGridItem } from \"@/layouts/grid/grid.types\";\nimport { ContextProviderGridItem } from \"@/layouts/grid/context.grid.item\";\nimport { GridItemContent } from \"@/layouts/grid/components/grid.item.content\";\n\nexport const Item = (props: IGridItem) => {\n  const { config, children } = props;\n  return (\n    <ContextProviderGridItem span={config.span}>\n      <GridItemContent>{children}</GridItemContent>\n    </ContextProviderGridItem>\n  );\n};\n","import { IGrid } from \"@/layouts/grid/grid.types\";\nimport React from \"react\";\nimport { Item } from \"@/layouts/grid/components/grid.item\";\nimport { ContextProviderGrid } from \"@/layouts/grid/context.grid\";\n\nexport const Grid = (props: IGrid) => {\n  const { config, children } = props;\n\n  return (\n    <ContextProviderGrid gap={config.gap} breakpoints={config.breakpoints}>\n      {children}\n    </ContextProviderGrid>\n  );\n};\n\nGrid.Item = Item;\n\nexport type { IGrid, IGridItem } from \"./grid.types\";\n"]}